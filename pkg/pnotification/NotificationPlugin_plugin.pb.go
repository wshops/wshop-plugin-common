//go:build tinygo.wasm

// Code generated by protoc-gen-go-plugin. DO NOT EDIT.
// versions:
// 	protoc-gen-go-plugin v0.1.0
// 	protoc               v3.21.7
// source: NotificationPlugin.proto

package pvcode

import (
	context "context"
	emptypb "github.com/knqyf263/go-plugin/types/known/emptypb"
	wasm "github.com/knqyf263/go-plugin/wasm"
)

const NotificationPluginAPIVersion = 1

//export notification_api_version
func _notification_api_version() uint64 {
	return NotificationPluginAPIVersion
}

var notification Notification

func RegisterNotification(p Notification) {
	notification = p
}

//export notification_config_plugin_info
func _notification_config_plugin_info(ptr, size uint32) uint64 {
	b := wasm.PtrToByte(ptr, size)
	var req emptypb.Empty
	if err := req.UnmarshalVT(b); err != nil {
		return 0
	}
	response, err := notification.ConfigPluginInfo(context.Background(), req)
	if err != nil {
		return 0
	}

	b, err = response.MarshalVT()
	if err != nil {
		return 0
	}
	ptr, size = wasm.ByteToPtr(b)
	return (uint64(ptr) << uint64(32)) | uint64(size)
}

//export notification_send_notification
func _notification_send_notification(ptr, size uint32) uint64 {
	b := wasm.PtrToByte(ptr, size)
	var req SendNotificationRequest
	if err := req.UnmarshalVT(b); err != nil {
		return 0
	}
	response, err := notification.SendNotification(context.Background(), req)
	if err != nil {
		return 0
	}

	b, err = response.MarshalVT()
	if err != nil {
		return 0
	}
	ptr, size = wasm.ByteToPtr(b)
	return (uint64(ptr) << uint64(32)) | uint64(size)
}
