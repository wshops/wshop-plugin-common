syntax = "proto3";
package pcaptcha;
import "google/protobuf/empty.proto";
import "common.proto";

option go_package = "github.com/wshops/wshop-plugin-common/pkg/pcaptcha";

// go:plugin type=plugin version=1
service Captcha {
  rpc GetPluginInfo(google.protobuf.Empty) returns (PluginInfo);

  // VerifyCaptcha 验证验证码
  rpc VerifyCaptcha(VerifyCaptchaRequest) returns (VerifyCaptchaResponse);

  // GetCustomHtmlInputField 获取自定义的html输入框
  rpc GetCustomHtmlInputField(EmptyRequest) returns (GetCustomHtmlInputFieldResponse);

  // GetCustomHtmlHead 自定义 html 头部中需要加的内容
  rpc GetCustomHtmlHead(EmptyRequest) returns (GetCustomHtmlHeadResponse);

  // GetCustomHtmlBodyEnd 自定义 html body 中最结尾需要加的内容
  rpc GetCustomHtmlBodyEnd(EmptyRequest) returns (GetCustomHtmlBodyEndResponse);
}

message VerifyCaptchaRequest {
  PluginContext pctx = 1;
  string captcha = 2;
}

message VerifyCaptchaResponse {
  bool isValid = 2;
}

message GetCustomHtmlInputFieldResponse {
  string html = 20;
}

message GetCustomHtmlHeadResponse {
  string html = 20;
}

message GetCustomHtmlBodyEndResponse {
  string html = 20;
}

//**************************
//*      host function     *
//**************************

// go:plugin type=host
service HostFunctions {
  rpc LogInfo(HFuncLogRequest) returns (google.protobuf.Empty);
  rpc LogError(HFuncLogRequest) returns (google.protobuf.Empty);
  rpc LogDebug(HFuncLogRequest) returns (google.protobuf.Empty);
  rpc LogWarn(HFuncLogRequest) returns (google.protobuf.Empty);
  rpc LogFatal(HFuncLogRequest) returns (google.protobuf.Empty);
  rpc LogPanic(HFuncLogRequest) returns (google.protobuf.Empty);
  rpc HttpRequest(HFuncHttpRequest) returns (HFuncHttpResponse);
}